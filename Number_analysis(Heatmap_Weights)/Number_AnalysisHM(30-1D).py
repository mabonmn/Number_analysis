# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QwL7-RH5c-BFzyx1-9SLAUren19Ez6wg
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
import datetime
mnist = tf.keras.datasets.mnist
(training_images, training_labels), (test_images, test_labels) = mnist.load_data()
import matplotlib.pyplot as plt

ini_date=datetime.datetime.now()
model = tf.keras.models.Sequential([tf.keras.layers.Flatten(), 
                                  
                                    tf.keras.layers.Dense(30, activation=tf.nn.relu), 
                                    tf.keras.layers.Dense(10, activation=tf.nn.softmax)])

model.compile(optimizer = tf.optimizers.Adam(),
              loss = 'sparse_categorical_crossentropy',
              metrics=['accuracy'])

history=model.fit(training_images, training_labels, epochs=100)

weights=model.get_weights()

plt.title("Heat Map of Weight of Input Neurons")
import seaborn as sns

ax = sns.heatmap( weights[0])
plt.show()

plt.title("Heat Map of Weight of Hidden Layer Neurons")
ax = sns.heatmap( weights[2])